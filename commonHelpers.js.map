{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport izitoast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\n\nconst inputDate = document.querySelector(\"input#datetime-picker\");\n\nconst startBtn = document.querySelector(\"button[data-start]\");\n\nconst timerDays = document.querySelector(\".value[data-days]\");\nconst timerHours = document.querySelector(\".value[data-hours]\");\nconst timerMinutes = document.querySelector(\".value[data-minutes]\");\nconst timerSecons = document.querySelector(\".value[data-seconds]\");\n\n\n// options DatePicker\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if(userSelectedDate < new Date()){\n            izitoast.error({\n            position: 'topRight',\n            message: 'Please choose a date in the future'});\n            startBtn.disabled = true;\n        }\n        else{\n            startBtn.disabled = false;\n        }\n    },\n  };\n\n\nflatpickr(inputDate, options);\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n\n  //Event button\n\n  startBtn.addEventListener(\"click\", () => {\n    startBtn.disabled = true;\n    inputDate.disabled = true;\n   const intervalTimer = setInterval(() => {\n    const different = userSelectedDate - Date.now();\n    if(different <= 0) {\n        clearInterval(intervalTimer);\n        return;\n    }\n    const result = convertMs(different);\n    timerDays.textContent = String(result.days).padStart(2, 0);\n    timerHours.textContent = String(result.hours).padStart(2, 0);\n    timerMinutes.textContent = String(result.minutes).padStart(2, 0);\n    timerSecons.textContent = String(result.seconds).padStart(2, 0);\n   }, 1000);\n  })\n"],"names":["userSelectedDate","inputDate","startBtn","timerDays","timerHours","timerMinutes","timerSecons","options","selectedDates","izitoast","flatpickr","convertMs","ms","days","hours","minutes","seconds","intervalTimer","different","result"],"mappings":"2GAQA,IAAIA,EAAmB,KAEvB,MAAMC,EAAY,SAAS,cAAc,uBAAuB,EAE1DC,EAAW,SAAS,cAAc,oBAAoB,EAEtDC,EAAY,SAAS,cAAc,mBAAmB,EACtDC,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAe,SAAS,cAAc,sBAAsB,EAC5DC,EAAc,SAAS,cAAc,sBAAsB,EAI3DC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBR,EAAmBQ,EAAc,GAC9BR,EAAmB,IAAI,MACtBS,EAAS,MAAM,CACf,SAAU,WACV,QAAS,oCAAoC,CAAC,EAC9CP,EAAS,SAAW,IAGpBA,EAAS,SAAW,EAE3B,CACL,EAGAQ,EAAUT,EAAWM,CAAO,EAE5B,SAASI,EAAUC,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAKDd,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAU,SAAW,GACtB,MAAMgB,EAAgB,YAAY,IAAM,CACvC,MAAMC,EAAYlB,EAAmB,KAAK,IAAG,EAC7C,GAAGkB,GAAa,EAAG,CACf,cAAcD,CAAa,EAC3B,MACH,CACD,MAAME,EAASR,EAAUO,CAAS,EAClCf,EAAU,YAAc,OAAOgB,EAAO,IAAI,EAAE,SAAS,EAAG,CAAC,EACzDf,EAAW,YAAc,OAAOe,EAAO,KAAK,EAAE,SAAS,EAAG,CAAC,EAC3Dd,EAAa,YAAc,OAAOc,EAAO,OAAO,EAAE,SAAS,EAAG,CAAC,EAC/Db,EAAY,YAAc,OAAOa,EAAO,OAAO,EAAE,SAAS,EAAG,CAAC,CAC9D,EAAE,GAAI,CACP,CAAA"}